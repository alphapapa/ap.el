;;; theme-loaddefs.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from ef-arbutus-theme.el

(put 'ef-arbutus 'theme-properties (list :background-mode 'light :kind 'color-scheme :family 'ef))


;;; Generated autoloads from ef-autumn-theme.el

(put 'ef-autumn 'theme-properties (list :background-mode 'dark :kind 'color-scheme :family 'ef))


;;; Generated autoloads from ef-bio-theme.el

(put 'ef-bio 'theme-properties (list :background-mode 'dark :kind 'color-scheme :family 'ef))


;;; Generated autoloads from ef-cherie-theme.el

(put 'ef-cherie 'theme-properties (list :background-mode 'dark :kind 'color-scheme :family 'ef))


;;; Generated autoloads from ef-cyprus-theme.el

(put 'ef-cyprus 'theme-properties (list :background-mode 'light :kind 'color-scheme :family 'ef))


;;; Generated autoloads from ef-dark-theme.el

(put 'ef-dark 'theme-properties (list :background-mode 'dark :kind 'color-scheme :family 'ef))


;;; Generated autoloads from ef-day-theme.el

(put 'ef-day 'theme-properties (list :background-mode 'light :kind 'color-scheme :family 'ef))


;;; Generated autoloads from ef-deuteranopia-dark-theme.el

(put 'ef-deuteranopia-dark 'theme-properties (list :background-mode 'dark :kind 'color-scheme :family 'ef))


;;; Generated autoloads from ef-deuteranopia-light-theme.el

(put 'ef-deuteranopia-light 'theme-properties (list :background-mode 'light :kind 'color-scheme :family 'ef))


;;; Generated autoloads from ef-dream-theme.el

(put 'ef-dream 'theme-properties (list :background-mode 'dark :kind 'color-scheme :family 'ef))


;;; Generated autoloads from ef-duo-dark-theme.el

(put 'ef-duo-dark 'theme-properties (list :background-mode 'dark :kind 'color-scheme :family 'ef))


;;; Generated autoloads from ef-duo-light-theme.el

(put 'ef-duo-light 'theme-properties (list :background-mode 'light :kind 'color-scheme :family 'ef))


;;; Generated autoloads from ef-elea-dark-theme.el

(put 'ef-elea-dark 'theme-properties (list :background-mode 'dark :kind 'color-scheme :family 'ef))


;;; Generated autoloads from ef-elea-light-theme.el

(put 'ef-elea-light 'theme-properties (list :background-mode 'light :kind 'color-scheme :family 'ef))


;;; Generated autoloads from ef-frost-theme.el

(put 'ef-frost 'theme-properties (list :background-mode 'light :kind 'color-scheme :family 'ef))


;;; Generated autoloads from ef-kassio-theme.el

(put 'ef-kassio 'theme-properties (list :background-mode 'light :kind 'color-scheme :family 'ef))


;;; Generated autoloads from ef-light-theme.el

(put 'ef-light 'theme-properties (list :background-mode 'light :kind 'color-scheme :family 'ef))


;;; Generated autoloads from ef-maris-dark-theme.el

(put 'ef-maris-dark 'theme-properties (list :background-mode 'dark :kind 'color-scheme :family 'ef))


;;; Generated autoloads from ef-maris-light-theme.el

(put 'ef-maris-light 'theme-properties (list :background-mode 'light :kind 'color-scheme :family 'ef))


;;; Generated autoloads from ef-melissa-dark-theme.el

(put 'ef-melissa-dark 'theme-properties (list :background-mode 'light :kind 'color-scheme :family 'ef))


;;; Generated autoloads from ef-melissa-light-theme.el

(put 'ef-melissa-light 'theme-properties (list :background-mode 'light :kind 'color-scheme :family 'ef))


;;; Generated autoloads from ef-night-theme.el

(put 'ef-night 'theme-properties (list :background-mode 'dark :kind 'color-scheme :family 'ef))


;;; Generated autoloads from ef-reverie-theme.el

(put 'ef-reverie 'theme-properties (list :background-mode 'light :kind 'color-scheme :family 'ef))


;;; Generated autoloads from ef-rosa-theme.el

(put 'ef-rosa 'theme-properties (list :background-mode 'light :kind 'color-scheme :family 'ef))


;;; Generated autoloads from ef-spring-theme.el

(put 'ef-spring 'theme-properties (list :background-mode 'light :kind 'color-scheme :family 'ef))


;;; Generated autoloads from ef-summer-theme.el

(put 'ef-summer 'theme-properties (list :background-mode 'light :kind 'color-scheme :family 'ef))


;;; Generated autoloads from ef-symbiosis-theme.el

(put 'ef-symbiosis 'theme-properties (list :background-mode 'dark :kind 'color-scheme :family 'ef))


;;; Generated autoloads from ef-trio-dark-theme.el

(put 'ef-trio-dark 'theme-properties (list :background-mode 'dark :kind 'color-scheme :family 'ef))


;;; Generated autoloads from ef-trio-light-theme.el

(put 'ef-trio-light 'theme-properties (list :background-mode 'light :kind 'color-scheme :family 'ef))


;;; Generated autoloads from ef-tritanopia-dark-theme.el

(put 'ef-tritanopia-dark 'theme-properties (list :background-mode 'dark :kind 'color-scheme :family 'ef))


;;; Generated autoloads from ef-tritanopia-light-theme.el

(put 'ef-tritanopia-light 'theme-properties (list :background-mode 'light :kind 'color-scheme :family 'ef))


;;; Generated autoloads from ef-winter-theme.el

(put 'ef-winter 'theme-properties (list :background-mode 'dark :kind 'color-scheme :family 'ef))

;;; End of scraped data

(provide 'theme-loaddefs)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; theme-loaddefs.el ends here
